name: .NET build and test
env:
  CURRENT_VERSION: 2.4.${{ github.run_number }}
  APPLICATION_VERSION: ${{ github.run_number }}
  LAST_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
  PACKAGENAME: "com.codeuctivity.LockPDFy"
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry

# @Forkers: add secrets in github SIGN_CERT, ANDROID_SIGN_CERT_PASSWORD use https://devblogs.microsoft.com/dotnet/devops-for-dotnet-maui/

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
  workflow_dispatch:
permissions:
  contents: read

  # Parts got from https://github.com/irongut/MauiBeach/blob/master/.github/workflows/ci-build.yml
  # Create Base64 encoded version of keystore
  # certutil.exe -encode .\GooglePlayStore.keystore .\GooglePlayStore.keystore.base64
  # drop the primer and end stuff

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
      - name: Install MAUI Workloads
        run: |
          dotnet workload install android --ignore-failed-sources
          dotnet workload install maui --ignore-failed-sources
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build .\LockPDFyGithubActionsFriendly.slnf --no-restore --configuration Release
      - name: Build maui windows
        run: dotnet build .\LockPDFyMaui --configuration Release -f net7.0-windows10.0.19041.0
      - name: Test
        run: dotnet test .\LockPDFyGithubActionsFriendly.slnf --no-restore --no-build --verbosity normal --configuration Release
      - name: Build maui android
        run: dotnet publish LockPDFyMaui -f net7.0-android -c Release -p:ApplicationVersion=$APPLICATION_VERSION -p:ApplicationDisplayVersion=$CURRENT_VERSION -p:ApplicationId=$PACKAGENAME
      - name: Create signing pfx file from secrets
        shell: pwsh
        id: secret-file
        env:
          SIGN_CERT: ${{ secrets.SIGN_CERT }}
          ANDROID_SIGN_CERT_PASSWORD: ${{ secrets.ANDROID_SIGN_CERT_PASSWORD }}
        if:  env.SIGN_CERT != ''
        run: |
          $secretFile = "AndroidSignCert.pfx"; 
          $secretFileBase64 = "AndroidSignCert.pfx";
          certutil.exe -decode $secretFileBase64 $secretFile  
          Set-Content $secretFileBase64 -Value $env:SIGN_CERT
          Write-Output "::set-output name=SECRET_FILE::$secretFile";
          Write-Output "::set-output name=SECRET_FILE::$secretFileBase64";
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore $secretFile .\LockPDFyMaui\bin\Release\net7.0-android\publish\$PACKAGENAME.aab AndroidApps -storepass ${{secrets.ANDROID_SIGN_CERT_PASSWORD}}